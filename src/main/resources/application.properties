# Database Configuration
spring.datasource.url=${DB_URL:jdbc:mysql://localhost:3306/user_service_db}
spring.datasource.username=${DB_USERNAME:root}
spring.datasource.password=${DB_PASSWORD:password}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# JPA Configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect

# JWT Configuration
jwt.secret=${JWT_SECRET:your-super-secret-key-that-is-long-enough}
jwt.expiration.ms=${JWT_EXPIRATION_MS:86400000} # 24 hours

# Server Configuration
server.port=8080

# Spring Security
# No specific security properties needed here yet as we'll use Java config.

# Actuator (Optional - for health checks, etc.)
management.endpoints.web.exposure.include=health,info

# Google OAuth2 Configuration
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID:your-google-client-id}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET:your-google-client-secret}
spring.security.oauth2.client.registration.google.scope=openid,profile,email
# The redirect-uri is typically handled by Spring Security, but you can override if needed.
# spring.security.oauth2.client.registration.google.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}

# Frontend URL for OAuth2 redirect
frontend.oauth.redirect.url=http://localhost:3000/oauth-callback

# Google Translate API Key
google.translate.api.key=${GOOGLE_TRANSLATE_API_KEY:dummy-key}
